@use '../variables/color' as *;
@use '../variables/mnemonic-grid' as *;

@mixin mnemonic-cols-ionian {
  grid-column: $col-start-ionian / span $col-span-ionian;
}

@mixin mnemonic-spacer-after-ionian {
  grid-column: $col-start-spacer-after-ionian;
}

@mixin mnemonic-cols-dorian {
  grid-column: $col-start-dorian / span $col-span-dorian;
}

@mixin mnemonic-spacer-after-dorian {
  grid-column: $col-start-spacer-after-dorian;
}

@mixin mnemonic-cols-phrygian {
  grid-column: $col-start-phrygian / span $col-span-phrygian;
}

@mixin mnemonic-spacer-after-phrygian {
  grid-column: $col-start-spacer-after-phrygian;
}

@mixin mnemonic-cols-lydian {
  grid-column: $col-start-lydian / span $col-span-lydian;
}

@mixin mnemonic-spacer-after-lydian {
  grid-column: $col-start-spacer-after-lydian;
}

@mixin mnemonic-cols-mixolydian {
  grid-column: $col-start-mixolydian / span $col-span-mixolydian;
}

@mixin mnemonic-spacer-after-mixolydian {
  grid-column: $col-start-spacer-after-mixolydian;
}

@mixin mnemonic-cols-aeolian {
  grid-column: $col-start-aeolian / span $col-span-aeolian;
}

@mixin mnemonic-spacer-after-aeolian {
  grid-column: $col-start-spacer-after-aeolian;
}

@mixin mnemonic-cols-locrian {
  grid-column: $col-start-locrian / span $col-span-locrian;
}

// row-factor represents how many grid rows appear per string. E.g. Two on the Mnemonic Grid, and 1 on the others.
@mixin shape-ionian($row-factor: 1, $row-offset: 0, $col-start: 1) {
  justify-content: start;
  align-items: start;

  &.oct-a.deg-1 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-a.deg-2 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-a.deg-3 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-a.deg-4 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-a.deg-5 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-a.deg-6 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-a.deg-7 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 2 + $col-start;
  }

  &.oct-b.deg-1 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-2 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-b.deg-3 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 2 + $col-start;
  }

  &.oct-b.deg-4 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-5 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-b.deg-6 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-7 {
    grid-row: (1 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-c.deg-1 {
    grid-row: (1 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }
}

@mixin shape-dorian($row-factor: 1, $row-offset: 0, $col-start: 1) {
  justify-content: end;
  align-items: start;

  &.oct-a.deg-1 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-a.deg-2 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-a.deg-3 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 4 + $col-start;
  }

  &.oct-a.deg-4 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-a.deg-5 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-a.deg-6 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-a.deg-7 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-b.deg-1 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-2 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-b.deg-3 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-b.deg-4 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-5 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-b.deg-6 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-7 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 4 + $col-start;
  }

  &.oct-c.deg-1 {
    grid-row: (1 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }
}

@mixin shape-phrygian($row-factor: 1, $row-offset: 0, $col-start: 1) {
  justify-content: end;
  align-items: end;

  &.oct-a.deg-1 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-a.deg-2 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-a.deg-3 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-a.deg-4 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-a.deg-5 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 2 + $col-start;
  }

  &.oct-a.deg-6 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-a.deg-7 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-b.deg-1 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 2 + $col-start;
  }

  &.oct-b.deg-2 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-3 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-b.deg-4 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 2 + $col-start;
  }

  &.oct-b.deg-5 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-b.deg-6 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-b.deg-7 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-c.deg-1 {
    grid-row: (1 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }
}

@mixin shape-lydian($row-factor: 1, $row-offset: 0, $col-start: 1) {
  justify-content: start;
  align-items: end;

  &.oct-a.deg-1 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-a.deg-2 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-a.deg-3 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-a.deg-4 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 2 + $col-start;
  }

  &.oct-a.deg-5 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-a.deg-6 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-a.deg-7 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 2 + $col-start;
  }

  &.oct-b.deg-1 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-2 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-b.deg-3 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 2 + $col-start;
  }

  &.oct-b.deg-4 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-b.deg-5 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-b.deg-6 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-7 {
    grid-row: (1 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-c.deg-1 {
    grid-row: (1 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }
}

@mixin shape-mixolydian($row-factor: 1, $row-offset: 0, $col-start: 1) {
  justify-content: start;
  align-items: start;

  &.oct-a.deg-1 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-a.deg-2 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-a.deg-3 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-a.deg-4 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-a.deg-5 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-a.deg-6 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-a.deg-7 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-b.deg-1 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-2 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-b.deg-3 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 2 + $col-start;
  }

  &.oct-b.deg-4 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-5 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-b.deg-6 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-7 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 4 + $col-start;
  }

  &.oct-c.deg-1 {
    grid-row: (1 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }
}

@mixin shape-aeolian($row-factor: 1, $row-offset: 0, $col-start: 1) {
  justify-content: end;
  align-items: start;

  &.oct-a.deg-1 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-a.deg-2 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-a.deg-3 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 4 + $col-start;
  }

  &.oct-a.deg-4 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-a.deg-5 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-a.deg-6 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 4 + $col-start;
  }

  &.oct-a.deg-7 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-b.deg-1 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-2 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-b.deg-3 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-b.deg-4 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-5 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-b.deg-6 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 2 + $col-start;
  }

  &.oct-b.deg-7 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 4 + $col-start;
  }

  &.oct-c.deg-1 {
    grid-row: (1 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }
}

@mixin shape-locrian($row-factor: 1, $row-offset: 0, $col-start: 1) {
  justify-content: end;
  align-items: end;

  &.oct-a.deg-1 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-a.deg-2 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-a.deg-3 {
    grid-row: (6 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-a.deg-4 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-a.deg-5 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-a.deg-6 {
    grid-row: (5 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-a.deg-7 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-b.deg-1 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 2 + $col-start;
  }

  &.oct-b.deg-2 {
    grid-row: (4 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-3 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }

  &.oct-b.deg-4 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 2 + $col-start;
  }

  &.oct-b.deg-5 {
    grid-row: (3 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-b.deg-6 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 1 + $col-start;
  }

  &.oct-b.deg-7 {
    grid-row: (2 * $row-factor) + $row-offset;
    grid-column: 3 + $col-start;
  }

  &.oct-c.deg-1 {
    grid-row: (1 * $row-factor) + $row-offset;
    grid-column: 0 + $col-start;
  }
}
